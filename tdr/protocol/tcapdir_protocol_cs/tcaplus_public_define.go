// auto generated by tdr 2.7.37, don't edit!
//
//     go code compiler
//     author: cowhuang@tencent.com
//
// create time: 2020-11-12 20:09:54
package tcapdir_protocol_cs

const MAX_STR_LEN_SS int64 = 32
const MAX_STR_LEN_S int64 = 64
const TCAPLUS_MAX_STR_LEN int64 = 256
const MAX_STR_LEN_L int64 = 512
const MAX_STR_LEN_LL int64 = 1024

// 每个tcapsvr进程最多支持的shard数目
const MAX_SHARD_CNT_PER_SVR int64 = 512

// 每个tcapsvr进程最多支持的table数目
const MAX_TABLE_CNT_PER_SVR int64 = 512

// 每个zone最多支持的table数目
const MAX_TABLE_CNT_PER_ZONE int64 = 256

// 每个zone最多支持的table数目(for 3.0.3及更早的版本)
const MAX_TABLE_CNT_PER_ZONE_LEGACY int64 = 64

// 腾讯云APP访问权限最大注册数目
const MAX_GCLOUD_APP_REGISTER_ID_NUM int64 = 1024

// 腾讯云APP访问权限最大注册数目
const TCAPLUS_MAX_ZONE_COUNT_PER_APP int64 = 512

// 共享proxy支持最大的区的数目
const TCAPLUS_MAX_ZONE_COUNT_PER_SHARED_PROXY int64 = 100
const MAX_CONFSTR_LEN int64 = 256
const MAX_CONFSTR_LEN_S int64 = 64
const TCAPLUS_MAX_VALUE_DEFAULT_LEN int64 = 64
const TCM_PROC_STR_MAX_LEN_FOR_BATCH int64 = 1024

// 存放meta信息,最大10MB
const TCAPLUS_MAX_IDL_CONTENT_LEN int64 = 10485760

// 一个List记录的所有元素索引的序列化buffer的最大长度,该值需要定义得大于等于sizeof(TcapListIndex)才行.
const TCAPLUS_MAX_LIST_INDEX_ARRAY_BUFF_LEN int64 = 1000000
const TCAPDIR_SIGNATURE_LEN int64 = 1024
const TCAPLUS_MAX_ERROR_STRING_LEN int64 = 1024
const TCAPLUS_MAX_HTTP_QUERY_STRING_LEN int64 = 1024
const TCAPLUS_INVALID_TABLE_SHARD_ID int64 = -1
const TCAPLUS_MAX_SHARD_ID_PER_TABLE int64 = 10000

// probe控测worker最低超时时间ms
const TCAPLUS_MIN_WORKER_PROBE_TIMEOUT_MS int64 = 10000

// 更新Record AccessInfo的最大时间间隔. 2147483647秒为68年，如果要等68年才更新一次Record AccessInfo则相当于永不更新Record AccessInfo.
const TCAPLUS_MAX_UPDATE_REC_ACCESSINFO_INTERVAL_SECS int64 = 2147483647

// 更新Record AccessInfo的默认时间间隔.
const TCAPLUS_DEFAULT_UPDATE_REC_ACCESSINFO_INTERVAL_SECS int64 = 320
const MAX_RANGE_NUM_PER_SHARD int64 = 10000
const TCAPLUS_MAX_APP_PASSWORD_LEN int64 = 16
const MAX_TRANSACTION_DATA_LEN int64 = 16384
const MAX_BYPASS_ADDR_LEN int64 = 128
const MAX_BYPASS_CMD_LEN int64 = 256

// 一分钟内LRU换出记录条数最大值的默认值..
const DEF_OF_MAX_SHIFTOUT_REC_NUM_PER_MINUTE int64 = 120

// 一分钟内LRU换出记录条数最大值的最大值.
const MAX_OF_MAX_SHIFTOUT_REC_NUM_PER_MINUTE int64 = 6000

// Lru换出换入上水位.
const DEF_LRU_MAXLINE int64 = 98

// Lru换出换入下水位.
const DEF_LRU_MINLINE int64 = 90

// 在GetData()函数中使用hashtable的方式来查找字段的阈值，这个阈值指回包中字段的个数
const USE_HASH_TABLE_IN_GETDATA_THRESHOLD int64 = 10

// 导致进入只读状态的数据文件所在分区的剩余空间阀值的默认值，单位为MB.
const DEF_DATADISK_FREESPACE_STARTING_READONLY int64 = 20480

// 导致进入只读状态的Ulog文件所在分区的剩余空间阀值的默认值，单位为MB.
const DEF_ULOGDISK_FREESPACE_STARTING_READONLY int64 = 20480

// 导致进入只读状态的数据文件所在分区的剩余空间阀值的最小值，单位为MB.
const MIN_DATADISK_FREESPACE_STARTING_READONLY int64 = 5000

// 导致进入只读状态的Ulog文件所在分区的剩余空间阀值的最小值，单位为MB.
const MIN_ULOGDISK_FREESPACE_STARTING_READONLY int64 = 5000

// 导致进入只读状态的数据文件所在分区的剩余空间阀值的最大值，单位为MB.
const MAX_DATADISK_FREESPACE_STARTING_READONLY int64 = 1024000

// 导致进入只读状态的Ulog文件所在分区的剩余空间阀值的最大值，单位为MB.
const MAX_ULOGDISK_FREESPACE_STARTING_READONLY int64 = 1024000

// 每产生COMBINE_TIMES_FOR_ONE_LOG_WRITE次日志只实际写1次该(类型)日志，用于日志收敛目的.
const COMBINE_TIMES_FOR_ONE_LOG_WRITE int64 = 512
const DISKIO_DIRECT_DEFAULT_CHUNK_SIZE int64 = 4096
const DISKIO_DIRECT_MAX_CHUNK_SIZE int64 = 65536

// 直接io的最小读写buff长度的power，直接io的最小读写buff长度等于1个扇区大小512B (二进制1左移9位).
const DISKIO_DIRECT_POWER_OF_MIN_RW_SIZE_EACH_TIME int64 = 9

// bson格式的最大嵌套层数
const MAX_NEST_FOR_BSON int64 = 32

// 可配置的数据采集中心的最大数量
const MAX_COLLECT_CNT int64 = 32

// 判断Proxy不可用的错误请求包比率阈值
const PROXY_UNAVAILABLE_THRESHOLD int64 = 90

// Proxy可用性的检测周期默认10秒
const PROXY_AVAILABLE_CHECK_PERIOD int64 = 10

// Proxy可用性的连续检测次数默认3次
const PROXY_AVAILABLE_CHECK_TIMES int64 = 3

// 对不可用的Proxy重新检测的间隔时间默认60秒
const PROXY_AVAILABLE_RECHECK_INTERVAL int64 = 60

// 判断Proxy不可用的心跳回包时间的间隔默认为30秒
const PROXY_HEART_BEAT_TIME_INTERVAL int64 = 30

// API与dir的心跳时间，默认10秒
const API_FROM_DIR_HEART_BEAT_TIME int64 = 10

// API与proxy的心跳时间，默认1秒
const API_FROM_PROXY_HEART_BEAT_TIME int64 = 1

// 默认响应包超时时间(单位:毫秒)
const API_RESPONSE_TIMEOUT int64 = 3000

// 循环遍历链表时每次遍历的最大节点数
const API_TRAVERSE_NODE_COUNT_PER_TIME int64 = 100

// Dir不可用性的检测周期默认30秒
const DIR_AVAILABLE_CHECK_PERIOD int64 = 30

// API向dir更新dir列表的周期，默认60秒
const DIR_UPDATE_LIST_INTERVAL int64 = 60

// API向dir更新TablesAndAccess的周期，默认300秒
const DIR_UPDATE_TABLES_AND_ACESS_INTERVAL int64 = 300

// 发布包地址的最大长度
const MAX_RELEASE_PACKAGE_ADDR int64 = 256

// MD5的最大长度
const MAX_MD5_LEN int64 = 128
const MAX_DEVICE_CLASS_LEN int64 = 128
const MAX_HARD_MEMO_LEN int64 = 128
const MAX_CAMPUS_LEN int64 = 128

// ip地址和ID的最大长度
const MAX_IP_ID_LEN int64 = 128

// 使用者名字的最大长度
const MAX_USRENAME_LEN int64 = 33

// SHA1码的最大长度
const MAX_SHA1_LEN int64 = 128

// 打包分支名的最大长度
const MAX_BRANCH_LEN int64 = 256

// 索引服务地址的最大个数
const MAX_INDEX_SERVER_ADDRESS_NUM int64 = 100

// 索引服务ip列表的最大长度
const MAX_INDEX_SERVER_IP_LIST_LEN int64 = 409600

// 索引服务帐号的最大长度
const INDEX_SERVER_ACCOUNT_LEN int64 = 256

// 索引服务密码的最大长度
const INDEX_SERVER_PASSWORD_LEN int64 = 256

// 索引服务域名的最大长度
const INDEX_SERVER_DOMAIN_LEN int64 = 256

// 分布式索引字段列表最大长度
const DISTRIBUTE_INDEX_FIELD_LIST_MAX_LEN int64 = 10240
const TCAPLUS_RUN_MODE_INVALID int64 = -1
const TCAPLUS_RUN_MODE_MASTER int64 = 0
const TCAPLUS_RUN_MODE_SLAVE int64 = 1

// 未知状态
const TCAPLUS_RUN_STATUS_UNKNOWN int64 = -2

// 程序即将停止运行
const TCAPLUS_RUN_STATUS_WAIT_STOP int64 = -1

// 程序运行状态为停止
const TCAPLUS_RUN_STATUS_STOP int64 = 0

// 程序运行状态为已经启动但暂时不提供服务
const TCAPLUS_RUN_STATUS_WAIT_SERVICE int64 = 1

// 程序运行状态为正在服务
const TCAPLUS_RUN_STATUS_SERVICE int64 = 2
const TCAPLUS_TABLE_TYPE_GENERIC int64 = 0
const TCAPLUS_TABLE_TYPE_LIST int64 = 1
const TCAPLUS_DB_TYPE_POSTGRESQL int64 = 0
const TCAPLUS_DB_TYPE_MYSQL int64 = 1
const TCAPLUS_DB_TYPE_TDBANK int64 = 2
const TCAPLUS_DB_TYPE_GCS int64 = 3
const TCAPLUS_DB_TYPE_INDEX_SERVER int64 = 4
const TCAPLUS_ENGINE_TCH int64 = 0
const TCAPLUS_ENGINE_TCB int64 = 1
const TCAPLUS_ENGINE_TXH int64 = 2
const TCAPLUS_SLAVE_READ_NONE int64 = 0
const TCAPLUS_SLAVE_READ_BATCH int64 = 1
const TCAPLUS_SLAVE_READ_MULTI int64 = 2
const TCAPLUS_SLAVE_READ_ALL int64 = 3

// 置位时，若存储端数据与指定版本相比发生了变化，才返回数据
const TCAPLUS_FLAG_FETCH_ONLY_IF_MODIFIED int64 = 0x00000001

// 置位时，若存储端数据在最近指定的时间窗口内发生了变化，才返回数据
const TCAPLUS_FLAG_FETCH_ONLY_IF_EXPIRED int64 = 0x00000002

// 外部读请求仅发给Slave
const TCAPLUS_FLAG_ONLY_READ_FROM_SLAVE int64 = 0x00000004

// 置位时，List表删除最后一个元素时需要保留index和version
const TCAPLUS_FLAG_LIST_RESERVE_INDEX_HAVING_NO_ELEMENTS int64 = 0x00000008

// CS协议Magic. tcaplus 前端和 tcaplus系统之间的通信协议.
const TCAPLUS_PROTOCOL_MAGIC_CS int64 = 0x7543

// 路由Magic. proxy 和 tcaplus系统之间的通信协议.
const TCAPLUS_PROTOCOL_MAGIC_PROXY int64 = 0x2312

// 缓写协议Magic. tcaplus 系统之间的通信协议.
const TCAPLUS_PROTOCOL_MAGIC_SS int64 = 0x5542

// 同步协议Magic. tcapsvr master 与salve之间的通信协议.
const TCAPLUS_PROTOCOL_MAGIC_SYNC int64 = 0x6548

// 控制协议Magic. tcapcenter 与其他服务器之间的控制协议.
const TCAPLUS_PROTOCOL_MAGIC_CONTROL int64 = 0x2332

// Tcapdir的WS协议Magic. tcapdir 与后端系统之间的协议.
const TCAPLUS_PROTOCOL_MAGIC_DIR_WS int64 = 0x8595

// Tcapdir的CS协议Magic. tcapdir 与前端系统之间的协议.
const TCAPLUS_PROTOCOL_MAGIC_DIR_CS int64 = 0x9575

// CS协议Magic. tcaplus source服务发出的协议(用于数据搬迁).
const TCAPLUS_PROTOCOL_MAGIC_SOURCE int64 = 0x5533

// CS协议Magic. tcaplus target服务发出的协议(用于数据搬迁).
const TCAPLUS_PROTOCOL_MAGIC_DESTINATION int64 = 0x5535

// 路由Magic. slave从ulog记录转换出来并转发给worker的协议.
const TCAPLUS_PROTOCOL_MAGIC_INNER_CS int64 = 0x5432

// Tcapsvr内部协议Magic. tcapsvr进程内部线程之间的协议.
const TCAPLUS_PROTOCOL_MAGIC_INTRA_SVR int64 = 0xcafe

// 路由Magic. Proxy和tcaplus系统之间的带统计功能的通信协议.
const TCAPLUS_PROTOCOL_MAGIC_PROXY_WITH_STATISTIC int64 = 0x1314

// 路由Magic. Proxy和tcaplus系统之间的通信协议(用tdr方式定义的头部).
const TCAPLUS_PROTOCOL_MAGIC_PROXY_FOR_TDR int64 = 0x5176

// 路由Magic. Proxy和tcaplus系统之间的通信协议(格式增加了版本号).
const TCAPLUS_PROTOCOL_MAGIC_PROXY_MSG int64 = 0x5177

// 数据搬迁过程中的binlog同步过来的ulog记录转换出来并转发给工作线程的协议
const TCAPLUS_PROTOCOL_MAGIC_BINLOG_SYNC_FOR_DATA_MOVE int64 = 0xbeef

// tcapsvr、tcaproxy组件内部状态统计大周期的时间间隔的默认值,单位为秒.
const DEFAULT_STAT_INTERVAL int64 = 60

// tcapsvr、tcaproxy组件内部状态统计小周期的时间间隔的默认值,单位为秒.
const DEFAULT_SMALL_STAT_INTERVAL int64 = 10

// tcaproxy组件内部过载保护相关状态统计微小周期的时间间隔的默认值,单位为秒.
const DEFAULT_TINY_STAT_INTERVAL int64 = 2

// 服务器上单个网卡最大流入量，单位MB.
const DEFAULT_NETWORK_INPUT_TOTAL int64 = 800

// 服务器上单个网卡最大流出量，单位MB.
const DEFAULT_NETWORK_OUTPUT_TOTAL int64 = 800
const TCAPLUS_MAX_MEMO_LEN int64 = 512
const TCAPLUS_MAX_CONTEXT_LEN int64 = 16384
const TCAPLUS_MAX_APP_USERNAME_LEN int64 = 64
const TCAPLUS_MAX_PASSWORD_LEN int64 = 64
const TCAPLUS_MAC_SYNCMECH_NUM int64 = 4
const TCAPLUS_ENGINE_PARAMTERS_SIZE int64 = 1024
const TCAPLUS_SYNCDB_FIELD_LIST_MAX_LEN int64 = 10240
const SWITCH_OFF int64 = 0
const SWITCH_ON int64 = 1

// invalid type
const TCAPSVR_INVALID int64 = 0

// master and slave
const TCAPSVR_MASTER_SLAVE int64 = 1

// master only
const TCAPSVR_MASTER_ONLY int64 = 2

// slave only
const TCAPSVR_SLAVE_ONLY int64 = 3

// slave only,在安装tcapsvr的动作中只执行AddProc和PushBin
const TCAPSVR_SLAVE_ONLY_ADDPROC_AND_PUSHBIN int64 = 4

// new slave 只执行ModProc和PushBin
const TCAPSVR_NEWSLAVE_ONLY_MODPROC_AND_PUSHBIN int64 = 5

// new master 只执行ModProc和PushBin
const TCAPSVR_NEWMASTER_ONLY_MODPROC_AND_PUSHBIN int64 = 6
const DISKIO_TYPE_CACHED int64 = 1
const DISKIO_TYPE_DIRECT int64 = 2
const DISKIO_TYPE_AUTO int64 = 3
const FLUSH_IMMEDIATE int64 = 1
const FLUSH_PERIOD int64 = 2
const SHM_TYPE_MMAP int64 = 1
const SHM_TYPE_GENSHM int64 = 2
const SHM_TYPE_AUTO int64 = 3
const ULOG_CACHE_TYPE_OFF int64 = 0
const ULOG_CACHE_TYPE_ON int64 = 1
const ULOG_CACHE_TYPE_AUTO int64 = 2
const DISKIO_DIRECT_CHUNK_RW_MANNER_MINIMUM int64 = 1
const DISKIO_DIRECT_CHUNK_RW_MANNER_COMPLETE int64 = 2
const AUTO_RESTORE_NOT_ALLOW int64 = 0
const AUTO_RESTORE_ALLOW_SLOW int64 = 1
const AUTO_RESTORE_ALLOW_FAST int64 = 2

// 检测记录版本号,只有当该版本号与服务器端的版本号相同时，该版本号才会自增
const CHECKDATAVERSION_AUTOINCREASE int64 = 1

// 不检测记录版本号，强制把客户端的记录版本号写入到服务器中
const NOCHECKDATAVERSION_OVERWRITE int64 = 2

// 不检测记录版本号，将服务器端的版本号自增
const NOCHECKDATAVERSION_AUTOINCREASE int64 = 3

// 不进行压缩
const COMPRESS_NONE int64 = 0

// 使用Snappy压缩算法进行压缩
const COMPRESS_SNAPPY int64 = 1

// 使用LZO压缩算法进行压缩
const COMPRESS_LZO int64 = 2

// 不进行restore操作
const RESTORE_NONE int64 = 0

// 数据整理
const RESTORE_FOR_ADJUSTMENT int64 = 1

// 数据恢复
const RESTORE_FOR_RECOVERY int64 = 2

// restore操作失败
const RESTORE_RESULT_FAILED int64 = -1

// restore操作正在执行
const RESTORE_RESULT_PROCESSING int64 = 0

// restore操作成功
const RESTORE_RESULT_SUCCESS int64 = 1

// start_stop操作失败
const START_STOP_PRGRESS_FAILED int64 = -1

// start_stop操作正在执行
const START_STOP_PROCESSING int64 = 0

// start_stop操作成功
const START_STOP_PRGRESS_SUCCESS int64 = 1

// tcapsvr上报为start操作
const START_TYPE int64 = 1

// tcapsvr上报为stop操作
const STOP_TYPE int64 = 2

// 期望缓慢安全停止. 表示数据落地到硬盘，已接收消息要求被处理完毕后才能退出.
const EXPECTED_PROCESS_STOP_SPEED_SLOW int64 = 1

// 期望立即停止. 表示数据有可能保留共享内存未落地到硬盘文件，已接收消息会被立马丢失进而进程迅速退出.
const EXPECTED_PROCESS_STOP_SPEED_IMMEDIATE int64 = 2

// 普通停止
const EXPECTED_PROCESS_STOP_NORMAL int64 = 0

// 停止后马上删除共享内存，只剩下硬盘数据
const EXPECTED_PROCESS_STOP_DEL_SHM int64 = 1

// 无效的启动模式.
const EXPECTED_PROCESS_START_SPEED_INVALID int64 = -1

// 期望缓慢安全启动. 对应 TAPP_START_MODE_INIT
const EXPECTED_PROCESS_START_SPEED_SLOW int64 = 0

// 期望立即启动. 对应TAPP_START_MODE_RESUME
const EXPECTED_PROCESS_START_SPEED_IMMEDIATE int64 = 1
const MAX_CONF_NAME_LEN int64 = 255

// tcaproxy配置
const CONF_ITEM_TYPE_TCAPROXY int64 = 0

// tcapsvr配置
const CONF_ITEM_TYPE_TCAPSVR int64 = 1

// service api配置
const CONF_ITEM_TYPE_SERVICEAPI int64 = 2

// tcaprestproxy配置
const CONF_ITEM_TYPE_TCAPRESTPROXY int64 = 3

// 适用于app
const CONF_ITEM_SUBTYPE_APP int64 = 0

// 适用于zone
const CONF_ITEM_SUBTYPE_ZONE int64 = 1

// 适用于进程
const CONF_ITEM_SUBTYPE_INST int64 = 2

// 适用于Table
const CONF_ITEM_SUBTYPE_TBL int64 = 3

// TimeOut
const CONF_ITEM_CID_TCAPROXY_TIMEOUT int64 = 1001

// MaxTransNum
const CONF_ITEM_CID_TCAPROXY_MAX_TRANS int64 = 1002

// MaxActionNum
const CONF_ITEM_CID_TCAPROXY_MAX_ACTION int64 = 1003

// DatamoveSyncTransWaitListNum
const CONF_ITEM_CID_TCAPROXY_SYNC_WAIT_NUM int64 = 1004

// ReportInterval
const CONF_ITEM_CID_TCAPROXY_REPORT_INTERVAL int64 = 1005

// RejectTimeout
const CONF_ITEM_CID_TCAPROXY_REJECT_TIMEOUT int64 = 1006

// OperationToleranceTime
const CONF_ITEM_CID_TCAPROXY_OP_TOLERANCE_TM int64 = 1007

// MaxClientCount
const CONF_ITEM_CID_TCAPROXY_MAX_CLIENT int64 = 1008

// ReportInterval
const CONF_ITEM_CID_TCAPSVR_REPORT_INTERVAL int64 = 1009

// HeartbeatInterval
const CONF_ITEM_CID_TCAPSVR_HEARBEAT_INTERVAL int64 = 1010

// UpdateRecAccessInfoInvervalSecs
const CONF_ITEM_CID_TCAPSVR_ACCESS_UPDATE_TM int64 = 1011

// MaxConnection
const CONF_ITEM_CID_TCAPSVR_MAX_CONN int64 = 1012

// RespProtocolCompressSwitch
const CONF_ITEM_CID_TCAPSVR_RES_COMPRESS int64 = 1013

// DiskIoType
const CONF_ITEM_CID_TCAPSVR_DISK_TYPE int64 = 1014

// ShmType
const CONF_ITEM_CID_TCAPSVR_SHM_TYPE int64 = 1015

// MaxReqNumWithoutBatchGetPerSecond
const CONF_ITEM_CID_TCAPROXY_REQ_LIMIT_NON_BATCHGET int64 = 1016

// MaxBatchGetReqNumPerSecond
const CONF_ITEM_CID_TCAPROXY_REQ_LIMIT_BATCHGET int64 = 1017

// DataMoveSpeedControl
const CONF_ITEM_CID_TCAPSVR_SPEED_CONTROL_RULE int64 = 1018

// FileChunkCacheSizePerShard
const CONF_ITEM_CID_TCAPSVR_FILE_CHUNK_CACHE_SIZE int64 = 1019

// FlushToDisk_IMMEDIATE_PERIOD
const CONF_ITEM_CID_TCAPSVR_FILE_CHUNK_FLUSH_TYPE int64 = 1020

// UlogCacheType
const CONF_ITEM_CID_TCAPSVR_ULOG_CACHE_TYPE int64 = 1021

// TcapsvrUseSasvr
const CONF_ITEM_CID_TCAPSVR_USE_SASVR int64 = 1022

// TcaproxyUseSasvr
const CONF_ITEM_CID_TCAPROXY_USE_SASVR int64 = 1023

// TcapsvrAlarmBlockReqSwitch
const CONF_ITEM_CID_TCAPSVR_ALARM_BLOCK_REQ_SWITCH int64 = 1024

// data expire speed
const CONF_ITEM_CID_TCAPSVR_DATA_EXPIRE_SPEED_RULES int64 = 1025

// TcapsvrBlockAlarm
const CONF_ITEM_CID_TCAPSVR_BLOCK_ALARM int64 = 1026

// enable connection session audit
const CONF_ITEM_CID_TCAPROXY_ENABLE_AUDIT int64 = 1027

// TransRespMempoolBlockNum
const CONF_ITEM_CID_TCAPROXY_TRANS_RESP_MEMPOOL_BLOCK_NUM int64 = 1028

// data cleanup speed
const CONF_ITEM_CID_TCAPSVR_DATA_CLEANUP_SPEED_RULES int64 = 1029

// tmonitor-sasvr url
const CONF_ITEM_CID_TCAPROXY_SASVR_URL int64 = 1030

// tmonitor-sasvr url
const CONF_ITEM_CID_TCAPSVR_SASVR_URL int64 = 1031

// SyncReadReqEnable
const CONF_ITEM_CID_TCAPSVR_SYNC_READ_ENABLE int64 = 1032

// TcapsvrAccurateStatisticsInterval
const CONF_ITEM_CID_TCAPSVR_ACCURATE_STATISTICS_INTERVAL int64 = 1033

// TcaproxyAccurateStatisticsInterval
const CONF_ITEM_CID_TCAPROXY_ACCURATE_STATISTICS_INTERVAL int64 = 1034

// tcapsvr SlowProcessTimeMS
const CONF_ITEM_CID_TCAPSVR_SLOW_PROCESS_TIME_MS int64 = 1035

// tcaprestproxy session timeout
const CONF_ITEM_CID_TCAPRESTPROXY_SESSION_TIMEOUT int64 = 1036

// tcaprestproxy api connect timeout
const CONF_ITEM_CID_TCAPRESTPROXY_API_CONN_TIMEOUT int64 = 1037

// tcaprestproxy api register table timeout
const CONF_ITEM_CID_TCAPRESTPROXY_API_REGTABLE_TIMEOUT int64 = 1038

// Tcaproxy overload control mode
const CONF_ITEM_CID_TCAPROXY_OVERLOAD_CTRL_MODE int64 = 1039

// Tcaproxy overload control CPU threshold
const CONF_ITEM_CID_TCAPROXY_OVERLOAD_CPU_THRESHOLD int64 = 1040

// Tcaproxy overload control NETIN threshold
const CONF_ITEM_CID_TCAPROXY_OVERLOAD_NETIN_THRESHOLD int64 = 1041

// Tcaproxy overload control NETOUT threshold
const CONF_ITEM_CID_TCAPROXY_OVERLOAD_NETOUT_THRESHOLD int64 = 1042

// Tcaproxy overload control punish step
const CONF_ITEM_CID_TCAPROXY_OVERLOAD_PUNISH_STEP int64 = 1043

// Tcaproxy tcp recvbuf
const CONF_ITEM_CID_TCAPROXY_TCP_RECVBUF int64 = 1044

// Tcaproxy tcp sendbuf
const CONF_ITEM_CID_TCAPROXY_TCP_SENDBUF int64 = 1045

// TDR 1.0
const TDR_VERSION_TYPE_V1 int64 = 1

// TDR 2.0 TLV
const TDR_VERSION_TYPE_V2 int64 = 2

// TDR 1.0
const TCAPLUS_PACKAGE_TYPE_CENTER int64 = 1

// TDR 2.0 TLV
const TCAPLUS_PACKAGE_TYPE_SERVICE int64 = 2

// 非法
const INVALID_SPEED_TYPE int64 = -1

// 数据搬迁
const DATA_MOVE_SPEED_TYPE int64 = 0

// 数据淘汰
const DATA_EXPIRE_SPEED_TYPE int64 = 1

// 数据清理
const DATA_CLEANUP_SPEED_TYPE int64 = 2

// 无损搬迁数据搬迁速度
const LOSSLESS_MOVE_DATA_SPEED_TYPE int64 = 3

// 无损搬迁binlog同步速度
const LOSSLESS_MOVE_BINLOG_SPEED_TYPE int64 = 4

// 无损搬迁目标端脏数据清理速度
const LOSSLESS_MOVE_CLEANUP_SPEED_TYPE int64 = 5

// 索引搬迁过程中数据同步速度
const SYNC_SHARD_DATA_FOR_REBUILD_INDEX_SPEED_TYPE int64 = 6

// 索引搬迁过程中binlog同步速度
const BINLOG_SYNC_FOR_REBUILD_INDEX_SPEED_TYPE int64 = 7
const TCAPLUS_IDL_TYPE_INVAILD int64 = 0
const TCAPLUS_IDL_TYPE_TDRXML int64 = 1
const TCAPLUS_IDL_TYPE_PROTOBUF int64 = 2
const TCAPLUS_IDL_TYPE_PEBBLE int64 = 3

// 机器初始化中
const BACKUP_MACHINE_INITIALIZING int64 = 0

// 机器初始化完成
const BACKUP_MACHINE_INITIALIZED int64 = 1

// 机器上架中
const BACKUP_MACHINE_DOING_ADDHOST int64 = 2

// 机器回收中
const BACKUP_MACHINE_RECYCLING int64 = 3
const INITIALIZE_IN_NORMAL_MODE int64 = 0
const INITIALIZE_TO_BACKUP_POOL int64 = 1

// 最大用户名长度
const TCAPLUS_MAX_USERNAME_LEN int64 = 33

// 最大IP白名单长度
const MAX_WHITELIST_IP_LENGTH int64 = 160000
