// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.0
// source: table_common.proto

package tcaplusservice

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnumT int32

const (
	EnumT_E0 EnumT = 0
	EnumT_E1 EnumT = 1
)

// Enum value maps for EnumT.
var (
	EnumT_name = map[int32]string{
		0: "E0",
		1: "E1",
	}
	EnumT_value = map[string]int32{
		"E0": 0,
		"E1": 1,
	}
)

func (x EnumT) Enum() *EnumT {
	p := new(EnumT)
	*p = x
	return p
}

func (x EnumT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumT) Descriptor() protoreflect.EnumDescriptor {
	return file_table_common_proto_enumTypes[0].Descriptor()
}

func (EnumT) Type() protoreflect.EnumType {
	return &file_table_common_proto_enumTypes[0]
}

func (x EnumT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumT.Descriptor instead.
func (EnumT) EnumDescriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{0}
}

type GamePlayers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// primary key fields
	PlayerId    int64  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName  string `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerEmail string `protobuf:"bytes,3,opt,name=player_email,json=playerEmail,proto3" json:"player_email,omitempty"`
	// Ordinary fields
	GameServerId    int32    `protobuf:"varint,4,opt,name=game_server_id,json=gameServerId,proto3" json:"game_server_id,omitempty"`
	LoginTimestamp  []string `protobuf:"bytes,5,rep,name=login_timestamp,json=loginTimestamp,proto3" json:"login_timestamp,omitempty"`
	LogoutTimestamp []string `protobuf:"bytes,6,rep,name=logout_timestamp,json=logoutTimestamp,proto3" json:"logout_timestamp,omitempty"`
	IsOnline        bool     `protobuf:"varint,7,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	Pay             *Payment `protobuf:"bytes,8,opt,name=pay,proto3" json:"pay,omitempty"`
}

func (x *GamePlayers) Reset() {
	*x = GamePlayers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePlayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlayers) ProtoMessage() {}

func (x *GamePlayers) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlayers.ProtoReflect.Descriptor instead.
func (*GamePlayers) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{0}
}

func (x *GamePlayers) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *GamePlayers) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *GamePlayers) GetPlayerEmail() string {
	if x != nil {
		return x.PlayerEmail
	}
	return ""
}

func (x *GamePlayers) GetGameServerId() int32 {
	if x != nil {
		return x.GameServerId
	}
	return 0
}

func (x *GamePlayers) GetLoginTimestamp() []string {
	if x != nil {
		return x.LoginTimestamp
	}
	return nil
}

func (x *GamePlayers) GetLogoutTimestamp() []string {
	if x != nil {
		return x.LogoutTimestamp
	}
	return nil
}

func (x *GamePlayers) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *GamePlayers) GetPay() *Payment {
	if x != nil {
		return x.Pay
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayId    int64   `protobuf:"varint,1,opt,name=pay_id,json=payId,proto3" json:"pay_id,omitempty"`
	Amount   uint64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Method   int64   `protobuf:"varint,3,opt,name=method,proto3" json:"method,omitempty"`
	Anker    float32 `protobuf:"fixed32,4,opt,name=anker,proto3" json:"anker,omitempty"`
	Anker_01 float64 `protobuf:"fixed64,5,opt,name=anker_01,json=anker01,proto3" json:"anker_01,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{1}
}

func (x *Payment) GetPayId() int64 {
	if x != nil {
		return x.PayId
	}
	return 0
}

func (x *Payment) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetMethod() int64 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *Payment) GetAnker() float32 {
	if x != nil {
		return x.Anker
	}
	return 0
}

func (x *Payment) GetAnker_01() float64 {
	if x != nil {
		return x.Anker_01
	}
	return 0
}

type TbOnlineList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid    int32                `protobuf:"varint,1,opt,name=openid,proto3" json:"openid,omitempty"` //QQ Uin
	Tconndid  int32                `protobuf:"varint,2,opt,name=tconndid,proto3" json:"tconndid,omitempty"`
	Timekey   string               `protobuf:"bytes,3,opt,name=timekey,proto3" json:"timekey,omitempty"`
	Gamesvrid string               `protobuf:"bytes,4,opt,name=gamesvrid,proto3" json:"gamesvrid,omitempty"`
	Logintime int32                `protobuf:"varint,5,opt,name=logintime,proto3" json:"logintime,omitempty"`
	Lockid    []int64              `protobuf:"varint,6,rep,packed,name=lockid,proto3" json:"lockid,omitempty"`
	Pay       *TbOnlineListPayInfo `protobuf:"bytes,7,opt,name=pay,proto3" json:"pay,omitempty"`
}

func (x *TbOnlineList) Reset() {
	*x = TbOnlineList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbOnlineList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbOnlineList) ProtoMessage() {}

func (x *TbOnlineList) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbOnlineList.ProtoReflect.Descriptor instead.
func (*TbOnlineList) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{2}
}

func (x *TbOnlineList) GetOpenid() int32 {
	if x != nil {
		return x.Openid
	}
	return 0
}

func (x *TbOnlineList) GetTconndid() int32 {
	if x != nil {
		return x.Tconndid
	}
	return 0
}

func (x *TbOnlineList) GetTimekey() string {
	if x != nil {
		return x.Timekey
	}
	return ""
}

func (x *TbOnlineList) GetGamesvrid() string {
	if x != nil {
		return x.Gamesvrid
	}
	return ""
}

func (x *TbOnlineList) GetLogintime() int32 {
	if x != nil {
		return x.Logintime
	}
	return 0
}

func (x *TbOnlineList) GetLockid() []int64 {
	if x != nil {
		return x.Lockid
	}
	return nil
}

func (x *TbOnlineList) GetPay() *TbOnlineListPayInfo {
	if x != nil {
		return x.Pay
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rank    int32       `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	Gameids []int64     `protobuf:"varint,4,rep,packed,name=gameids,proto3" json:"gameids,omitempty"`
	Mailbox []*UserMail `protobuf:"bytes,5,rep,name=mailbox,proto3" json:"mailbox,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *User) GetGameids() []int64 {
	if x != nil {
		return x.Gameids
	}
	return nil
}

func (x *User) GetMailbox() []*UserMail {
	if x != nil {
		return x.Mailbox
	}
	return nil
}

type ListUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rank    int32           `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	Gameids []int64         `protobuf:"varint,4,rep,packed,name=gameids,proto3" json:"gameids,omitempty"`
	Mailbox []*ListUserMail `protobuf:"bytes,5,rep,name=mailbox,proto3" json:"mailbox,omitempty"`
}

func (x *ListUser) Reset() {
	*x = ListUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUser) ProtoMessage() {}

func (x *ListUser) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUser.ProtoReflect.Descriptor instead.
func (*ListUser) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{4}
}

func (x *ListUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListUser) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ListUser) GetGameids() []int64 {
	if x != nil {
		return x.Gameids
	}
	return nil
}

func (x *ListUser) GetMailbox() []*ListUserMail {
	if x != nil {
		return x.Mailbox
	}
	return nil
}

type AllTypeT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B    bool      `protobuf:"varint,1,opt,name=b,proto3" json:"b,omitempty"`
	I32  int32     `protobuf:"varint,2,opt,name=i32,proto3" json:"i32,omitempty"`
	U64  uint64    `protobuf:"varint,3,opt,name=u64,proto3" json:"u64,omitempty"`
	F    float32   `protobuf:"fixed32,4,opt,name=f,proto3" json:"f,omitempty"`
	D    float64   `protobuf:"fixed64,5,opt,name=d,proto3" json:"d,omitempty"`
	E    EnumT     `protobuf:"varint,6,opt,name=e,proto3,enum=tcaplusservice.EnumT" json:"e,omitempty"`
	Rb   []bool    `protobuf:"varint,7,rep,packed,name=rb,proto3" json:"rb,omitempty"`
	Ri32 []int32   `protobuf:"varint,8,rep,packed,name=ri32,proto3" json:"ri32,omitempty"`
	Ru64 []uint64  `protobuf:"varint,9,rep,packed,name=ru64,proto3" json:"ru64,omitempty"`
	Rf   []float32 `protobuf:"fixed32,10,rep,packed,name=rf,proto3" json:"rf,omitempty"`
	Rd   []float64 `protobuf:"fixed64,11,rep,packed,name=rd,proto3" json:"rd,omitempty"`
	Re   []EnumT   `protobuf:"varint,12,rep,packed,name=re,proto3,enum=tcaplusservice.EnumT" json:"re,omitempty"`
}

func (x *AllTypeT) Reset() {
	*x = AllTypeT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypeT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypeT) ProtoMessage() {}

func (x *AllTypeT) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypeT.ProtoReflect.Descriptor instead.
func (*AllTypeT) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{5}
}

func (x *AllTypeT) GetB() bool {
	if x != nil {
		return x.B
	}
	return false
}

func (x *AllTypeT) GetI32() int32 {
	if x != nil {
		return x.I32
	}
	return 0
}

func (x *AllTypeT) GetU64() uint64 {
	if x != nil {
		return x.U64
	}
	return 0
}

func (x *AllTypeT) GetF() float32 {
	if x != nil {
		return x.F
	}
	return 0
}

func (x *AllTypeT) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *AllTypeT) GetE() EnumT {
	if x != nil {
		return x.E
	}
	return EnumT_E0
}

func (x *AllTypeT) GetRb() []bool {
	if x != nil {
		return x.Rb
	}
	return nil
}

func (x *AllTypeT) GetRi32() []int32 {
	if x != nil {
		return x.Ri32
	}
	return nil
}

func (x *AllTypeT) GetRu64() []uint64 {
	if x != nil {
		return x.Ru64
	}
	return nil
}

func (x *AllTypeT) GetRf() []float32 {
	if x != nil {
		return x.Rf
	}
	return nil
}

func (x *AllTypeT) GetRd() []float64 {
	if x != nil {
		return x.Rd
	}
	return nil
}

func (x *AllTypeT) GetRe() []EnumT {
	if x != nil {
		return x.Re
	}
	return nil
}

type TbMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	I32          int32                `protobuf:"varint,3,opt,name=i32,proto3" json:"i32,omitempty"`
	Str          string               `protobuf:"bytes,4,opt,name=str,proto3" json:"str,omitempty"`
	AllType      *AllTypeT            `protobuf:"bytes,5,opt,name=all_type,json=allType,proto3" json:"all_type,omitempty"`
	StrArray     []string             `protobuf:"bytes,6,rep,name=str_array,json=strArray,proto3" json:"str_array,omitempty"`
	I32Array     []int32              `protobuf:"varint,7,rep,packed,name=i32_array,json=i32Array,proto3" json:"i32_array,omitempty"`
	AllTypeArray []*AllTypeT          `protobuf:"bytes,8,rep,name=all_type_array,json=allTypeArray,proto3" json:"all_type_array,omitempty"`
	IntMap       map[int32]*AllTypeT  `protobuf:"bytes,9,rep,name=int_map,json=intMap,proto3" json:"int_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StrMap       map[string]*AllTypeT `protobuf:"bytes,10,rep,name=str_map,json=strMap,proto3" json:"str_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TbMap) Reset() {
	*x = TbMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbMap) ProtoMessage() {}

func (x *TbMap) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbMap.ProtoReflect.Descriptor instead.
func (*TbMap) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{6}
}

func (x *TbMap) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TbMap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TbMap) GetI32() int32 {
	if x != nil {
		return x.I32
	}
	return 0
}

func (x *TbMap) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *TbMap) GetAllType() *AllTypeT {
	if x != nil {
		return x.AllType
	}
	return nil
}

func (x *TbMap) GetStrArray() []string {
	if x != nil {
		return x.StrArray
	}
	return nil
}

func (x *TbMap) GetI32Array() []int32 {
	if x != nil {
		return x.I32Array
	}
	return nil
}

func (x *TbMap) GetAllTypeArray() []*AllTypeT {
	if x != nil {
		return x.AllTypeArray
	}
	return nil
}

func (x *TbMap) GetIntMap() map[int32]*AllTypeT {
	if x != nil {
		return x.IntMap
	}
	return nil
}

func (x *TbMap) GetStrMap() map[string]*AllTypeT {
	if x != nil {
		return x.StrMap
	}
	return nil
}

type TbOnlineListPayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalMoney uint64 `protobuf:"varint,1,opt,name=total_money,json=totalMoney,proto3" json:"total_money,omitempty"`
	PayTimes   uint64 `protobuf:"varint,2,opt,name=pay_times,json=payTimes,proto3" json:"pay_times,omitempty"`
}

func (x *TbOnlineListPayInfo) Reset() {
	*x = TbOnlineListPayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbOnlineListPayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbOnlineListPayInfo) ProtoMessage() {}

func (x *TbOnlineListPayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbOnlineListPayInfo.ProtoReflect.Descriptor instead.
func (*TbOnlineListPayInfo) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TbOnlineListPayInfo) GetTotalMoney() uint64 {
	if x != nil {
		return x.TotalMoney
	}
	return 0
}

func (x *TbOnlineListPayInfo) GetPayTimes() uint64 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

type UserMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UserMail) Reset() {
	*x = UserMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMail) ProtoMessage() {}

func (x *UserMail) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMail.ProtoReflect.Descriptor instead.
func (*UserMail) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{3, 0}
}

func (x *UserMail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UserMail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ListUserMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ListUserMail) Reset() {
	*x = ListUserMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMail) ProtoMessage() {}

func (x *ListUserMail) ProtoReflect() protoreflect.Message {
	mi := &file_table_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMail.ProtoReflect.Descriptor instead.
func (*ListUserMail) Descriptor() ([]byte, []int) {
	return file_table_common_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListUserMail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListUserMail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_table_common_proto protoreflect.FileDescriptor

var file_table_common_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x1d, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x03, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x03,
	0x70, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x63, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x03, 0x70, 0x61, 0x79, 0x3a, 0x6f, 0x82, 0xa6, 0x1d, 0x24, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x8a, 0xa6, 0x1d, 0x1f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x31, 0x28, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x29, 0x8a, 0xa6, 0x1d, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x32, 0x28,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x29, 0x22, 0x81, 0x01, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x5f, 0x30, 0x31, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x30, 0x31, 0x22, 0xf3, 0x02, 0x0a,
	0x0e, 0x74, 0x62, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x63, 0x6f, 0x6e, 0x6e,
	0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x63, 0x6f, 0x6e, 0x6e,
	0x64, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x76, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x76, 0x72, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63,
	0x6b, 0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x69,
	0x64, 0x12, 0x39, 0x0a, 0x03, 0x70, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x74, 0x62, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70,
	0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x70, 0x61, 0x79, 0x1a, 0x48, 0x0a, 0x08,
	0x70, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x3a, 0x3a, 0x82, 0xa6, 0x1d, 0x17, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x2c, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x64, 0x69, 0x64, 0x2c, 0x74, 0x69, 0x6d, 0x65,
	0x6b, 0x65, 0x79, 0xb2, 0xa6, 0x1d, 0x1b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x3d, 0x4c, 0x49, 0x53, 0x54, 0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x31, 0x30,
	0x32, 0x33, 0x22, 0xe6, 0x01, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x73, 0x12, 0x33, 0x0a,
	0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62,
	0x6f, 0x78, 0x1a, 0x36, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x3a, 0x1f, 0x82, 0xa6, 0x1d, 0x07,
	0x69, 0x64, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0x8a, 0xa6, 0x1d, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x28, 0x6e, 0x61, 0x6d, 0x65, 0x29, 0x22, 0x8e, 0x02, 0x0a, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x6d,
	0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74,
	0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x6d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x78, 0x1a, 0x36, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x3a, 0x3d, 0x82,
	0xa6, 0x1d, 0x07, 0x69, 0x64, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0xb2, 0xa6, 0x1d, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x53, 0x4f, 0x52, 0x54, 0x4c, 0x49, 0x53, 0x54,
	0x3b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x3d, 0x31, 0x30, 0x32, 0x34, 0x3b, 0x53, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3d, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x80, 0x02, 0x0a,
	0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x01, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x33, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x36, 0x34, 0x12, 0x0c, 0x0a,
	0x01, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x66, 0x12, 0x0c, 0x0a, 0x01, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x24, 0x0a, 0x01, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x52, 0x01, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x72, 0x62, 0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x02, 0x72, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x69, 0x33, 0x32, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x69, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x36, 0x34, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x04, 0x72, 0x75, 0x36, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x66, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x02, 0x52, 0x02, 0x72, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x64, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x02, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x02, 0x72, 0x65, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x52, 0x02, 0x72, 0x65, 0x22,
	0xc7, 0x04, 0x0a, 0x06, 0x74, 0x62, 0x5f, 0x6d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x33, 0x32,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x74, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74,
	0x52, 0x07, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x33, 0x32, 0x5f, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x69, 0x33, 0x32, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x63,
	0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x6c, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x62, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x49,
	0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x4d,
	0x61, 0x70, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x62, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x53, 0x74, 0x72, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x74, 0x72, 0x4d, 0x61, 0x70, 0x1a,
	0x55, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x63, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x1a, 0x82,
	0xa6, 0x1d, 0x07, 0x69, 0x64, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0x8a, 0xa6, 0x1d, 0x0b, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x28, 0x6e, 0x61, 0x6d, 0x65, 0x29, 0x2a, 0x18, 0x0a, 0x06, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x30, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x45,
	0x31, 0x10, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_table_common_proto_rawDescOnce sync.Once
	file_table_common_proto_rawDescData = file_table_common_proto_rawDesc
)

func file_table_common_proto_rawDescGZIP() []byte {
	file_table_common_proto_rawDescOnce.Do(func() {
		file_table_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_table_common_proto_rawDescData)
	})
	return file_table_common_proto_rawDescData
}

var file_table_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_table_common_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_table_common_proto_goTypes = []interface{}{
	(EnumT)(0),                  // 0: tcaplusservice.enum_t
	(*GamePlayers)(nil),         // 1: tcaplusservice.game_players
	(*Payment)(nil),             // 2: tcaplusservice.payment
	(*TbOnlineList)(nil),        // 3: tcaplusservice.tb_online_list
	(*User)(nil),                // 4: tcaplusservice.user
	(*ListUser)(nil),            // 5: tcaplusservice.list_user
	(*AllTypeT)(nil),            // 6: tcaplusservice.all_type_t
	(*TbMap)(nil),               // 7: tcaplusservice.tb_map
	(*TbOnlineListPayInfo)(nil), // 8: tcaplusservice.tb_online_list.pay_info
	(*UserMail)(nil),            // 9: tcaplusservice.user.mail
	(*ListUserMail)(nil),        // 10: tcaplusservice.list_user.mail
	nil,                         // 11: tcaplusservice.tb_map.IntMapEntry
	nil,                         // 12: tcaplusservice.tb_map.StrMapEntry
}
var file_table_common_proto_depIdxs = []int32{
	2,  // 0: tcaplusservice.game_players.pay:type_name -> tcaplusservice.payment
	8,  // 1: tcaplusservice.tb_online_list.pay:type_name -> tcaplusservice.tb_online_list.pay_info
	9,  // 2: tcaplusservice.user.mailbox:type_name -> tcaplusservice.user.mail
	10, // 3: tcaplusservice.list_user.mailbox:type_name -> tcaplusservice.list_user.mail
	0,  // 4: tcaplusservice.all_type_t.e:type_name -> tcaplusservice.enum_t
	0,  // 5: tcaplusservice.all_type_t.re:type_name -> tcaplusservice.enum_t
	6,  // 6: tcaplusservice.tb_map.all_type:type_name -> tcaplusservice.all_type_t
	6,  // 7: tcaplusservice.tb_map.all_type_array:type_name -> tcaplusservice.all_type_t
	11, // 8: tcaplusservice.tb_map.int_map:type_name -> tcaplusservice.tb_map.IntMapEntry
	12, // 9: tcaplusservice.tb_map.str_map:type_name -> tcaplusservice.tb_map.StrMapEntry
	6,  // 10: tcaplusservice.tb_map.IntMapEntry.value:type_name -> tcaplusservice.all_type_t
	6,  // 11: tcaplusservice.tb_map.StrMapEntry.value:type_name -> tcaplusservice.all_type_t
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_table_common_proto_init() }
func file_table_common_proto_init() {
	if File_table_common_proto != nil {
		return
	}
	file_tcaplusservice_optionv1_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_table_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamePlayers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbOnlineList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTypeT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbOnlineListPayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_table_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_table_common_proto_goTypes,
		DependencyIndexes: file_table_common_proto_depIdxs,
		EnumInfos:         file_table_common_proto_enumTypes,
		MessageInfos:      file_table_common_proto_msgTypes,
	}.Build()
	File_table_common_proto = out.File
	file_table_common_proto_rawDesc = nil
	file_table_common_proto_goTypes = nil
	file_table_common_proto_depIdxs = nil
}
